[sel4]
default_platform = 'pc99'
version = '10.0.0'

[sel4.config]
KernelRetypeFanOutLimit = 256

[sel4.config.x86_64]
KernelArch = 'x86'
KernelX86Sel4Arch = 'x86_64'
KernelSel4Arch = 'x86_64'

[sel4.config.pc99]
KernelPlatform = 'pc99'

[sel4.config.sabre]
KernelARMPlatform = 'sabre'
KernelPlatform = 'sabre'
KernelHaveFPU = true

[sel4.config.debug]
KernelPrinting = true
KernelDebugBuild = true

[sel4.config.release]
KernelPrinting = false
KernelDebugBuild = false

# A poorly thought out idea for toolchain management: 
[build.pc99]
cross_compiler_prefix = ""

[build.pc99.debug]
make_root_task = "xargo build --target=x86_64-unknown-linux-gnu"
root_task_image = "target/x86_64-unknown-linux-gnu/debug/example"

[build.pc99.release]
make_root_task = "xargo build --target=x86_64-unknown-linux-gnu --release"
root_task_image = "target/x86_64-unknown-linux-gnu/release/example"

[build.sabre]
cross_compiler_prefix = "arm-linux-gnueabihf-"

[build.sabre.debug]
make_root_task = "xargo build --target=arm-unknown-linux-gnu"
root_task_image = "target/arm-unknown-linux-gnu/debug/example"

[build.sabre.release]
make_root_task = "xargo build --target=arm-unknown-linux-gnu --release"
root_task_image = "target/arm-unknown-linux-gnu/release/example"

[build.crazy]
toolchain_dir = "/opt/my_crazy_toolchain"
cross_compiler_prefix = "arm-linux-gnueabi-"
# end of idea